buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.github.fvarrui:javapackager:1.7.4'
        //classpath group: 'com.github.jengelman.gradle.plugins', name: 'shadow', version: '4.0.4'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    //id 'org.beryx.jlink' version '2.25.0'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

group 'cn.reddragon'
version '2.1.0'

repositories {
    mavenCentral()
}

apply plugin: 'io.github.fvarrui.javapackager.plugin'

task packageWithoutJre(type: io.github.fvarrui.javapackager.gradle.PackageTask, dependsOn: build) {
    // mandatory
    mainClass = 'cn.reddragon.eportal.Main'
    // optional
    bundleJre = false
    generateInstaller = false
    administratorRequired = false
    outputDirectory = file("build/JavaPackager/noJre")
    platform = "auto"
    //additionalResources = [ file('file path'), file('folder path'), ... ]
    linuxConfig {

    }
    macConfig {

    }
    winConfig {

    }
}
task packageWithJre(type: io.github.fvarrui.javapackager.gradle.PackageTask, dependsOn: build) {
    // mandatory
    mainClass = 'cn.reddragon.eportal.Main'
    // optional
    bundleJre = true
    generateInstaller = false
    administratorRequired = false
    outputDirectory = file("build/JavaPackager/jreBundled")
    platform = "auto"
    //additionalResources = [ file('file path'), file('folder path'), ... ]
    linuxConfig {

    }
    macConfig {

    }
    winConfig {

    }
}

ext {
    junitVersion = '5.9.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'cn.reddragon.eportal'
    mainClass = 'cn.reddragon.eportal.Main'
}

javafx {
    version = '17.0.6'
    modules = ['javafx.controls', 'javafx.fxml']
}

jar {
    manifest {
        attributes 'Main-Class': 'cn.reddragon.eportal.Main'
    }
}
shadowJar {
    archiveClassifier.set('')
    archiveVersion.set('')
    destinationDirectory.set(file('build/libs/shadow'))
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.2')
    //implementation('io.netty:netty-all:4.1.86.Final')
    implementation('com.google.code.gson:gson:2.8.9')
    //implementation('')
    implementation 'org.apache.logging.log4j:log4j-api:2.23.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}
